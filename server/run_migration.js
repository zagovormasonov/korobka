const { Pool } = require('pg');

async function runMigration() {
  const pool = new Pool({
    connectionString: process.env.DATABASE_URL || 'postgresql://postgres:password@localhost:5432/korob_db'
  });

  try {
    console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é...');
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ email
    await pool.query('ALTER TABLE additional_test_results ADD COLUMN IF NOT EXISTS email VARCHAR(255)');
    console.log('‚úÖ –ü–æ–ª–µ email –¥–æ–±–∞–≤–ª–µ–Ω–æ');
    
    // –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å
    await pool.query('CREATE INDEX IF NOT EXISTS idx_additional_test_email ON additional_test_results(email)');
    console.log('‚úÖ –ò–Ω–¥–µ–∫—Å —Å–æ–∑–¥–∞–Ω');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏
    const result = await pool.query(`
      UPDATE additional_test_results 
      SET email = ptr.email 
      FROM primary_test_results ptr 
      WHERE additional_test_results.session_id = ptr.session_id 
      AND additional_test_results.email IS NULL
    `);
    console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ ${result.rowCount} –∑–∞–ø–∏—Å–µ–π`);
    
    console.log('üéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏:', error);
  } finally {
    await pool.end();
  }
}

runMigration();




