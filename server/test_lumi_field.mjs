import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

dotenv.config();

const supabaseUrl = process.env.SUPABASE_URL;
const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY || process.env.SUPABASE_KEY;

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå –û—à–∏–±–∫–∞: SUPABASE_URL –∏–ª–∏ SUPABASE_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ .env');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

async function testLumiField() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—è lumi_dashboard_message');
    console.log('');
    
    // –ü—ã—Ç–∞–µ–º—Å—è –≤—ã–±—Ä–∞—Ç—å –ø–æ–ª–µ
    const { data, error } = await supabase
      .from('primary_test_results')
      .select('id, session_id, lumi_dashboard_message')
      .limit(5);

    if (error) {
      if (error.message.includes('lumi_dashboard_message')) {
        console.error('‚ùå –ü–æ–ª–µ lumi_dashboard_message –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!');
        console.log('');
        console.log('üìù –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ –ø–æ–ª–µ –≤—Ä—É—á–Ω—É—é –≤ Supabase Dashboard:');
        console.log('   –ó–∞–ø—É—Å—Ç–∏—Ç–µ: node server/add_lumi_message_field.mjs');
      } else {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
      }
      process.exit(1);
    }

    console.log('‚úÖ –ü–æ–ª–µ lumi_dashboard_message —É—Å–ø–µ—à–Ω–æ –Ω–∞–π–¥–µ–Ω–æ!');
    console.log('');
    console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞:');
    console.log(`   –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${data.length}`);
    
    const withMessage = data.filter(row => row.lumi_dashboard_message);
    console.log(`   –° —Å–æ–æ–±—â–µ–Ω–∏–µ–º –õ—É–º–∏: ${withMessage.length}`);
    console.log(`   –ë–µ–∑ —Å–æ–æ–±—â–µ–Ω–∏—è: ${data.length - withMessage.length}`);
    console.log('');
    console.log('üéâ –ú–∏–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ.');
    
  } catch (error) {
    console.error('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
    process.exit(1);
  }
}

testLumiField();

