import express from 'express';
import axios from 'axios';
import { pool } from '../index.js';
import OpenAI from 'openai';
import { HttpsProxyAgent } from 'https-proxy-agent';
import { SocksProxyAgent } from 'socks-proxy-agent';
import { constants } from 'crypto';

const router = express.Router();

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ axios —Å –ø—Ä–æ–∫—Å–∏
function createAxiosConfig() {
  const config = {
    headers: {
      'Content-Type': 'application/json'
    }
  };

  // –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–æ–∫—Å–∏ –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–æ
  if (process.env.DISABLE_PROXY === 'true') {
    console.log('‚ö†Ô∏è –ü—Ä–æ–∫—Å–∏ –æ—Ç–∫–ª—é—á–µ–Ω (DISABLE_PROXY=true), –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞–ø—Ä—è–º—É—é –∫ Gemini API');
    return config;
  }

  // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–∫—Å–∏ –µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω
  if (process.env.PROXY_HOST && process.env.PROXY_PORT) {
    console.log('üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–∫—Å–∏ –¥–ª—è Gemini API:', {
      host: process.env.PROXY_HOST,
      port: process.env.PROXY_PORT,
      protocol: process.env.PROXY_PROTOCOL || 'http',
      auth: process.env.PROXY_USERNAME ? '–¥–∞' : '–Ω–µ—Ç'
    });

    // –°–æ–∑–¥–∞–µ–º URL –ø—Ä–æ–∫—Å–∏
    let proxyUrl = `${process.env.PROXY_PROTOCOL || 'http'}://`;
    
    if (process.env.PROXY_USERNAME && process.env.PROXY_PASSWORD) {
      proxyUrl += `${process.env.PROXY_USERNAME}:${process.env.PROXY_PASSWORD}@`;
    }
    
    proxyUrl += `${process.env.PROXY_HOST}:${process.env.PROXY_PORT}`;
    
    console.log('üîó Proxy URL:', proxyUrl.replace(/:[^:]*@/, ':***@')); // –°–∫—Ä—ã–≤–∞–µ–º –ø–∞—Ä–æ–ª—å –≤ –ª–æ–≥–∞—Ö
    
    // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã –ø—Ä–æ–∫—Å–∏
    try {
      // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º SOCKS5 –ø—Ä–æ–∫—Å–∏
      if (process.env.PROXY_TYPE === 'socks5') {
        console.log('üîß –ò—Å–ø–æ–ª—å–∑—É–µ–º SOCKS5 –ø—Ä–æ–∫—Å–∏...');
        const socksProxyUrl = `socks5://${process.env.PROXY_USERNAME}:${process.env.PROXY_PASSWORD}@${process.env.PROXY_HOST}:${process.env.PROXY_PORT}`;
        config.httpsAgent = new SocksProxyAgent(socksProxyUrl, {
          rejectUnauthorized: false,
          checkServerIdentity: () => undefined,
          // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
          timeout: 30000,
          keepAlive: true
        });
        console.log('‚úÖ SOCKS5 –ø—Ä–æ–∫—Å–∏ —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ');
      } else {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º HTTP –ø—Ä–æ–∫—Å–∏
        console.log('üîß –ò—Å–ø–æ–ª—å–∑—É–µ–º HTTP –ø—Ä–æ–∫—Å–∏...');
        config.httpsAgent = new HttpsProxyAgent(proxyUrl, {
          // –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –¥–ª—è –ø—Ä–æ–∫—Å–∏
          rejectUnauthorized: false,
          checkServerIdentity: () => undefined, // –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É hostname
          // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏ –¥–ª—è –æ–±—Ö–æ–¥–∞ –ø—Ä–æ–±–ª–µ–º —Å SSL
          secureProtocol: 'TLSv1_2_method',
          ciphers: 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384',
          // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏ –¥–ª—è –æ–±—Ö–æ–¥–∞ –ø—Ä–æ–±–ª–µ–º —Å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞–º–∏
          servername: 'generativelanguage.googleapis.com',
          // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
          keepAlive: true,
          timeout: 30000,
          // –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –ø—Ä–æ–∫—Å–∏
          secureOptions: constants.SSL_OP_NO_SSLv2 | constants.SSL_OP_NO_SSLv3
        });
        console.log('‚úÖ HTTP –ø—Ä–æ–∫—Å–∏ —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ');
      }
      config.timeout = 30000;
    } catch (proxyError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–∫—Å–∏ –∞–≥–µ–Ω—Ç–∞ –¥–ª—è Gemini API:', proxyError.message);
    }
  } else {
    console.log('üåê –ü—Ä–æ–∫—Å–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞–ø—Ä—è–º—É—é –∫ Gemini API');
  }

  return config;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–∑–æ–≤–∞ Gemini API —á–µ—Ä–µ–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π SDK
async function callGeminiAI(prompt, maxTokens = 2000) {
  try {
    const apiKey = process.env.GEMINI_API_KEY;
    
    if (!apiKey) {
      throw new Error('GEMINI_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
    }
    
    console.log('üî¨ –í—ã–∑—ã–≤–∞–µ–º Gemini API —á–µ—Ä–µ–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π SDK...');
    console.log('üìù –î–ª–∏–Ω–∞ –ø—Ä–æ–º–ø—Ç–∞:', prompt.length, '—Å–∏–º–≤–æ–ª–æ–≤');
    console.log('üîë API Key —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:', apiKey ? '–¥–∞' : '–Ω–µ—Ç');
    console.log('üîë API Key –ø–µ—Ä–≤—ã–µ 10 —Å–∏–º–≤–æ–ª–æ–≤:', apiKey ? apiKey.substring(0, 10) + '...' : '–ù–ï–¢');
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—Ä–æ–∫—Å–∏ –¥–ª—è Google AI SDK
    if (process.env.PROXY_HOST && process.env.PROXY_PORT && process.env.DISABLE_PROXY !== 'true') {
      console.log('üåê –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—Ä–æ–∫—Å–∏ –¥–ª—è Google AI SDK...');
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–∫—Å–∏
      if (process.env.PROXY_TYPE === 'socks5') {
        process.env.HTTP_PROXY = `socks5://${process.env.PROXY_USERNAME}:${process.env.PROXY_PASSWORD}@${process.env.PROXY_HOST}:${process.env.PROXY_PORT}`;
        process.env.HTTPS_PROXY = `socks5://${process.env.PROXY_USERNAME}:${process.env.PROXY_PASSWORD}@${process.env.PROXY_HOST}:${process.env.PROXY_PORT}`;
      } else {
        process.env.HTTP_PROXY = `http://${process.env.PROXY_USERNAME}:${process.env.PROXY_PASSWORD}@${process.env.PROXY_HOST}:${process.env.PROXY_PORT}`;
        process.env.HTTPS_PROXY = `http://${process.env.PROXY_USERNAME}:${process.env.PROXY_PASSWORD}@${process.env.PROXY_HOST}:${process.env.PROXY_PORT}`;
      }
      
      console.log('‚úÖ –ü—Ä–æ–∫—Å–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è Google AI SDK');
    } else {
      console.log('üåê –ü—Ä–æ–∫—Å–∏ –æ—Ç–∫–ª—é—á–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ');
    }
    
    // –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç Google AI
    const genAI = new GoogleGenerativeAI(apiKey);
    const model = genAI.getGenerativeModel({ model: "gemini-1.5-flash" });
    
    console.log('üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ Gemini —á–µ—Ä–µ–∑ SDK...');
    
    const result = await model.generateContent(prompt);
    const response = await result.response;
    const text = response.text();
    
    console.log('‚úÖ Gemini API –æ—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω —á–µ—Ä–µ–∑ SDK, –¥–ª–∏–Ω–∞:', text.length, '—Å–∏–º–≤–æ–ª–æ–≤');
    return text;
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ Gemini API —á–µ—Ä–µ–∑ SDK:', {
      message: error.message,
      stack: error.stack
    });
    
    // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ —Å–≤—è–∑–∞–Ω–∞ —Å –ø—Ä–æ–∫—Å–∏ –∏–ª–∏ —Å–µ—Ç—å—é, –ø–æ–ø—Ä–æ–±—É–µ–º –±–µ–∑ –ø—Ä–æ–∫—Å–∏
    if (error.message.includes('proxy') || error.message.includes('timeout') || 
        error.message.includes('network') || error.message.includes('connection') ||
        error.message.includes('ECONNREFUSED') || error.message.includes('ENOTFOUND')) {
      console.log('üîÑ –ü—Ä–æ–±—É–µ–º –±–µ–∑ –ø—Ä–æ–∫—Å–∏ —á–µ—Ä–µ–∑ SDK...');
      
      // –û—á–∏—â–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–∫—Å–∏
      delete process.env.HTTP_PROXY;
      delete process.env.HTTPS_PROXY;
      
      try {
        const genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY);
        const model = genAI.getGenerativeModel({ model: "gemini-1.5-pro" });
        
        console.log('üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º fallback –∑–∞–ø—Ä–æ—Å –∫ Gemini —á–µ—Ä–µ–∑ SDK...');
        
        const result = await model.generateContent(prompt);
        const response = await result.response;
        const text = response.text();
        
        console.log('‚úÖ Gemini API –æ—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω –±–µ–∑ –ø—Ä–æ–∫—Å–∏ —á–µ—Ä–µ–∑ SDK, –¥–ª–∏–Ω–∞:', text.length, '—Å–∏–º–≤–æ–ª–æ–≤');
        return text;
      } catch (fallbackError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ Gemini API –±–µ–∑ –ø—Ä–æ–∫—Å–∏ —á–µ—Ä–µ–∑ SDK:', {
          message: fallbackError.message,
          stack: fallbackError.stack
        });
      }
    }
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–∞–≥–ª—É—à–∫—É –µ—Å–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
    return '–ò–∑–≤–∏–Ω–∏—Ç–µ, —Å–µ—Ä–≤–∏—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.';
  }
}

// –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –º–∞—Å–∫–æ—Ç–∞ –¥–ª—è –ª–µ–Ω–¥–∏–Ω–≥–∞ –æ–ø–ª–∞—Ç—ã
router.post('/mascot-message/payment', async (req, res) => {
  try {
    console.log('ü§ñ –ó–∞–ø—Ä–æ—Å –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Å–æ–æ–±—â–µ–Ω–∏—è –º–∞—Å–∫–æ—Ç–∞:', req.body);
    
    const { sessionId } = req.body;
    
    if (!sessionId) {
      console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç sessionId');
      return res.status(400).json({ success: false, error: 'SessionId is required' });
    }
    
    console.log('üîë Gemini API Key:', process.env.GEMINI_API_KEY ? '—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù');
    
    // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞
    const testResult = await pool.query(
      'SELECT answers FROM primary_test_results WHERE session_id = $1',
      [sessionId]
    );

    if (testResult.rows.length === 0) {
      return res.status(404).json({ success: false, error: 'Test results not found' });
    }

    const answers = testResult.rows[0].answers;
    
    const prompt = `–ü—Ä–æ–≤–µ–¥–∏ –≥–ª—É–±–æ–∫–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ —Ç–µ—Å—Ç–∞ –∏ —Å–æ–∑–¥–∞–π –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.

–ò–°–°–õ–ï–î–û–í–ê–¢–ï–õ–¨–°–ö–ê–Ø –ó–ê–î–ê–ß–ê:
–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞ –Ω–∞ –ø—Å–∏—Ö–∏—á–µ—Å–∫–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ –∏ –≤—ã—è–≤–∏ –∫–ª—é—á–µ–≤—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –≤ –æ—Ç–≤–µ—Ç–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

–î–ê–ù–ù–´–ï –î–õ–Ø –ê–ù–ê–õ–ò–ó–ê:
${JSON.stringify(answers)}

–ò–°–°–õ–ï–î–û–í–ê–¢–ï–õ–¨–°–ö–ò–ï –í–û–ü–†–û–°–´:
1. –ö–∞–∫–∏–µ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–µ–æ–±–ª–∞–¥–∞—é—Ç –≤ –æ—Ç–≤–µ—Ç–∞—Ö?
2. –ö–∞–∫–∏–µ –æ–±–ª–∞—Å—Ç–∏ —Ç—Ä–µ–±—É—é—Ç –æ—Å–æ–±–æ–≥–æ –≤–Ω–∏–º–∞–Ω–∏—è?
3. –ö–∞–∫–∏–µ —Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã –º–æ–∂–Ω–æ –≤—ã–¥–µ–ª–∏—Ç—å?
4. –ö–∞–∫–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –ø–æ–≤–µ–¥–µ–Ω–∏—è –ø—Ä–æ—Å–ª–µ–∂–∏–≤–∞—é—Ç—Å—è?

–¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –†–ï–ó–£–õ–¨–¢–ê–¢–£:
- –°–æ–∑–¥–∞–π –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –º–∞—Å–∫–æ—Ç–∞ –õ—É–º–∏
- –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –∞–Ω–∞–ª–∏–∑–∞
- –°–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∫—Ä–∞—Ç–∫–∏–º (2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)
- –£–∫–∞–∂–∏ –≤–∞–∂–Ω–æ—Å—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –ø–ª–∞–Ω–∞
- –ù–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
- –ü—Ä–æ—è–≤–∏ —ç–º–ø–∞—Ç–∏—é –∏ –ø–æ–Ω–∏–º–∞–Ω–∏–µ

–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê: –¢–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –æ–±—ä—è—Å–Ω–µ–Ω–∏–π.`;

    const message = await callGeminiAI(prompt, 300);
    res.json({ success: true, message });
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –º–∞—Å–∫–æ—Ç–∞:', {
      message: error.message,
      status: error.response?.status,
      statusText: error.response?.statusText,
      data: error.response?.data
    });
    res.status(500).json({ success: false, error: error.message });
  }
});

// –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –º–∞—Å–∫–æ—Ç–∞ –¥–ª—è –¥–∞—à–±–æ—Ä–¥–∞
router.post('/mascot-message/dashboard', async (req, res) => {
  try {
    console.log('ü§ñ –ó–∞–ø—Ä–æ—Å –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Å–æ–æ–±—â–µ–Ω–∏—è –º–∞—Å–∫–æ—Ç–∞ –¥–ª—è dashboard:', req.body);
    
    const { sessionId } = req.body;
    
    if (!sessionId) {
      console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç sessionId');
      return res.status(400).json({ success: false, error: 'SessionId is required' });
    }
    
    console.log('üîë Gemini API Key:', process.env.GEMINI_API_KEY ? '—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù');
    
    // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–µ—Ä–≤–∏—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞
    const primaryTest = await pool.query(
      'SELECT answers, email FROM primary_test_results WHERE session_id = $1',
      [sessionId]
    );

    console.log('üîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞ –∏–∑ –ë–î:', primaryTest.rows);

    if (primaryTest.rows.length === 0) {
      console.log('‚ùå –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–ª—è sessionId:', sessionId);
      return res.status(404).json({ success: false, error: 'Test results not found' });
    }

    const answers = primaryTest.rows[0].answers;
    const email = primaryTest.rows[0].email;
    
    console.log('üìä –û—Ç–≤–µ—Ç—ã —Ç–µ—Å—Ç–∞:', answers);
    console.log('üìß Email –∏–∑ –ë–î:', email);
    
    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç—ã –∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ —Ç–µ—Å—Ç—ã
    const recommendedTests = await analyzeAndRecommendTests(answers);
    
    const prompt = `–ü—Ä–æ–≤–µ–¥–∏ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–æ–∑–¥–∞–π –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –º–æ—Ç–∏–≤–∏—Ä—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.

–ò–°–°–õ–ï–î–û–í–ê–¢–ï–õ–¨–°–ö–ê–Ø –ó–ê–î–ê–ß–ê:
–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–µ—Ä–≤–∏—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ –∏ –æ–ø—Ä–µ–¥–µ–ª–∏ –æ–ø—Ç–∏–º–∞–ª—å–Ω—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.

–î–ê–ù–ù–´–ï –î–õ–Ø –ê–ù–ê–õ–ò–ó–ê:
–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–µ—Ä–≤–∏—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞: ${JSON.stringify(answers)}
–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã: ${recommendedTests.map(t => t.name).join(', ')}

–ò–°–°–õ–ï–î–û–í–ê–¢–ï–õ–¨–°–ö–ò–ï –ù–ê–ü–†–ê–í–õ–ï–ù–ò–Ø:
1. –í—ã—è–≤–∏ –∫–ª—é—á–µ–≤—ã–µ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –≤ –æ—Ç–≤–µ—Ç–∞—Ö
2. –û–ø—Ä–µ–¥–µ–ª–∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ –æ–±–ª–∞—Å—Ç–∏ –¥–ª—è —É–≥–ª—É–±–ª–µ–Ω–Ω–æ–≥–æ –∏–∑—É—á–µ–Ω–∏—è
3. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –≤–∑–∞–∏–º–æ—Å–≤—è–∑–∏ –º–µ–∂–¥—É —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏
4. –û—Ü–µ–Ω–∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è –∏ —É–ª—É—á—à–µ–Ω–∏—è

–¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –†–ï–ó–£–õ–¨–¢–ê–¢–£:
- –°–æ–∑–¥–∞–π –º–æ—Ç–∏–≤–∏—Ä—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –º–∞—Å–∫–æ—Ç–∞ –õ—É–º–∏
- –û–±—ä—è—Å–Ω–∏ –≤–∞–∂–Ω–æ—Å—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞
- –£–∫–∞–∂–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –æ–±–ª–∞—Å—Ç–∏, —Ç—Ä–µ–±—É—é—â–∏–µ –≤–Ω–∏–º–∞–Ω–∏—è
- –ü—Ä–æ—è–≤–∏ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É
- –ù–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
- –ö—Ä–∞—Ç–∫–æ –∏ –ø–æ —Å—É—â–µ—Å—Ç–≤—É (3-4 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)

–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê: –¢–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –æ–±—ä—è—Å–Ω–µ–Ω–∏–π.`;

    console.log('üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ Gemini AI...');
    
    const message = await callGeminiAI(prompt, 350);
    res.json({ success: true, message, recommendedTests });
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –õ–ö:', {
      message: error.message,
      status: error.response?.status,
      statusText: error.response?.statusText,
      data: error.response?.data
    });
    res.status(500).json({ success: false, error: error.message });
  }
});

// –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω
router.post('/personal-plan', async (req, res) => {
  try {
    const { sessionId } = req.body;
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤
    const primaryTest = await pool.query(
      'SELECT answers FROM primary_test_results WHERE session_id = $1',
      [sessionId]
    );

    const additionalTests = await pool.query(
      'SELECT test_name, test_result FROM additional_test_results WHERE session_id = $1',
      [sessionId]
    );

    if (primaryTest.rows.length === 0) {
      return res.status(404).json({ success: false, error: 'Test results not found' });
    }

    const primaryAnswers = primaryTest.rows[0].answers;
    const additionalResults = additionalTests.rows;
    
    const prompt = `–ü—Ä–æ–≤–µ–¥–∏ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–æ–∑–¥–∞–π –¥–µ—Ç–∞–ª—å–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω —Ç–µ—Ä–∞–ø–∏–∏.

–ò–°–°–õ–ï–î–û–í–ê–¢–ï–õ–¨–°–ö–ê–Ø –ó–ê–î–ê–ß–ê:
–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –≤—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤ –∏ —Å–æ–∑–¥–∞–π –Ω–∞—É—á–Ω–æ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –ø–æ–º–æ—â–∏.

–î–ê–ù–ù–´–ï –î–õ–Ø –ê–ù–ê–õ–ò–ó–ê:
–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–µ—Ä–≤–∏—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞: ${JSON.stringify(primaryAnswers)}
–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤: ${JSON.stringify(additionalResults)}

–ò–°–°–õ–ï–î–û–í–ê–¢–ï–õ–¨–°–ö–ò–ï –ù–ê–ü–†–ê–í–õ–ï–ù–ò–Ø:
1. –í—ã—è–≤–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –∏ —Å–∏–Ω–¥—Ä–æ–º—ã
2. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –≤–∑–∞–∏–º–æ—Å–≤—è–∑–∏ –º–µ–∂–¥—É —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Å–∏–º–ø—Ç–æ–º–∞–º–∏
3. –û–ø—Ä–µ–¥–µ–ª–∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ –æ–±–ª–∞—Å—Ç–∏ –¥–ª—è —Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–∞
4. –û—Ü–µ–Ω–∏ —É—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞ –∏ —Å—Ä–æ—á–Ω–æ—Å—Ç–∏ –ø–æ–º–æ—â–∏
5. –ò–∑—É—á–∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∏ —Ä–∞–∑–≤–∏—Ç–∏—è

–¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –ü–õ–ê–ù–£:
–°–æ–∑–¥–∞–π —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω, –∫–æ—Ç–æ—Ä—ã–π –≤–∫–ª—é—á–∞–µ—Ç:

1. –ö–õ–ò–ù–ò–ß–ï–°–ö–ò–ô –ê–ù–ê–õ–ò–ó
   - –û—Å–Ω–æ–≤–Ω—ã–µ –≤—ã—è–≤–ª–µ–Ω–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã
   - –£—Ä–æ–≤–µ–Ω—å –≤—ã—Ä–∞–∂–µ–Ω–Ω–æ—Å—Ç–∏ —Å–∏–º–ø—Ç–æ–º–æ–≤
   - –í–∑–∞–∏–º–æ—Å–≤—è–∑–∏ –º–µ–∂–¥—É –ø—Ä–æ–±–ª–µ–º–∞–º–∏

2. –¢–ï–†–ê–ü–ï–í–¢–ò–ß–ï–°–ö–ò–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò
   - –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Ä–∞–ø–∏–∏
   - –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –º–µ—Ç–æ–¥—ã –ª–µ—á–µ–Ω–∏—è
   - –û–∂–∏–¥–∞–µ–º—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã

3. –ü–†–ê–ö–¢–ò–ß–ï–°–ö–ò–ï –®–ê–ì–ò
   - –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   - –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Ç–µ—Ä–∞–ø–∏–∏
   - –°–∞–º–æ–ø–æ–º–æ—â—å –º–µ–∂–¥—É —Å–µ–∞–Ω—Å–∞–º–∏

4. –í–´–ë–û–† –°–ü–ï–¶–ò–ê–õ–ò–°–¢–ê
   - –ö—Ä–∏—Ç–µ—Ä–∏–∏ –≤—ã–±–æ—Ä–∞ –ø—Å–∏—Ö–æ–ª–æ–≥–∞/–ø—Å–∏—Ö–∏–∞—Ç—Ä–∞
   - –¢–∏–ø —Ç–µ—Ä–∞–ø–∏–∏, –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π
   - –í–æ–ø—Ä–æ—Å—ã –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏

5. –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –†–ï–°–£–†–°–´
   - –ü–æ–ª–µ–∑–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
   - –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞
   - –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å

–¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –°–¢–ò–õ–Æ:
- –ù–∞—É—á–Ω—ã–π, –Ω–æ –ø–æ–Ω—è—Ç–Ω—ã–π —è–∑—ã–∫
- –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥
- –ü—Ä–∞–∫—Ç–∏—á–Ω–æ—Å—Ç—å –∏ –≤—ã–ø–æ–ª–Ω–∏–º–æ—Å—Ç—å
- –ù–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
- –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç—å —Å —á–µ—Ç–∫–∏–º–∏ —Ä–∞–∑–¥–µ–ª–∞–º–∏

–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê: –¢–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç –ø–ª–∞–Ω–∞, –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –æ–±—ä—è—Å–Ω–µ–Ω–∏–π.`;

    const plan = await callGeminiAI(prompt, 3000);
    res.json({ success: true, plan });
  } catch (error) {
    console.error('Error generating personal plan:', error);
    res.status(500).json({ success: false, error: error.message });
  }
});

// –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Å–µ–∞–Ω—Å—É
router.post('/session-preparation', async (req, res) => {
  try {
    const { sessionId, specialistType } = req.body; // 'psychologist' –∏–ª–∏ 'psychiatrist'
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤
    const primaryTest = await pool.query(
      'SELECT answers FROM primary_test_results WHERE session_id = $1',
      [sessionId]
    );

    const additionalTests = await pool.query(
      'SELECT test_name, test_result FROM additional_test_results WHERE session_id = $1',
      [sessionId]
    );

    if (primaryTest.rows.length === 0) {
      return res.status(404).json({ success: false, error: 'Test results not found' });
    }

    const primaryAnswers = primaryTest.rows[0].answers;
    const additionalResults = additionalTests.rows;
    
    const specialistName = specialistType === 'psychologist' ? '–ø—Å–∏—Ö–æ–ª–æ–≥—É' : '–ø—Å–∏—Ö–∏–∞—Ç—Ä—É';
    
    const prompt = `–ü—Ä–æ–≤–µ–¥–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–æ–∑–¥–∞–π –¥–µ—Ç–∞–ª—å–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –∫ —Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–æ–º—É —Å–µ–∞–Ω—Å—É.

–ò–°–°–õ–ï–î–û–í–ê–¢–ï–õ–¨–°–ö–ê–Ø –ó–ê–î–ê–ß–ê:
–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤ –∏ —Å–æ–∑–¥–∞–π –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ —Å–µ–∞–Ω—Å—É —Å ${specialistName}.

–î–ê–ù–ù–´–ï –î–õ–Ø –ê–ù–ê–õ–ò–ó–ê:
–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–µ—Ä–≤–∏—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞: ${JSON.stringify(primaryAnswers)}
–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤: ${JSON.stringify(additionalResults)}

–ò–°–°–õ–ï–î–û–í–ê–¢–ï–õ–¨–°–ö–ò–ï –ù–ê–ü–†–ê–í–õ–ï–ù–ò–Ø:
1. –í—ã—è–≤–∏ –∫–ª—é—á–µ–≤—ã–µ –ø—Ä–æ–±–ª–µ–º—ã, —Ç—Ä–µ–±—É—é—â–∏–µ –æ–±—Å—É–∂–¥–µ–Ω–∏—è
2. –û–ø—Ä–µ–¥–µ–ª–∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ —Ç–µ–º—ã –¥–ª—è —Å–µ–∞–Ω—Å–∞
3. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–ø–µ—Ü–∏—Ñ–∏–∫—É —Ä–∞–±–æ—Ç—ã —Å ${specialistName}
4. –û—Ü–µ–Ω–∏ –≤–∞–∂–Ω–æ—Å—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∞—Å–ø–µ–∫—Ç–æ–≤ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–π —Ç–µ—Ä–∞–ø–∏–∏
5. –ò–∑—É—á–∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è –≤ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏

–¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –†–£–ö–û–í–û–î–°–¢–í–£:
–°–æ–∑–¥–∞–π —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ –≤–∫–ª—é—á–∞–µ—Ç:

1. –ü–†–ò–û–†–ò–¢–ï–¢–ù–´–ï –¢–ï–ú–´ –î–õ–Ø –û–ë–°–£–ñ–î–ï–ù–ò–Ø
   - –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –∏–∑ —Ç–µ—Å—Ç–æ–≤
   - –°–∏–º–ø—Ç–æ–º—ã, —Ç—Ä–µ–±—É—é—â–∏–µ –≤–Ω–∏–º–∞–Ω–∏—è
   - –û–±–ª–∞—Å—Ç–∏ –Ω–∞–∏–±–æ–ª—å—à–µ–≥–æ –¥–∏—Å–∫–æ–º—Ñ–æ—Ä—Ç–∞

2. –ö–õ–Æ–ß–ï–í–´–ï –í–û–ü–†–û–°–´ –î–õ–Ø –°–ü–ï–¶–ò–ê–õ–ò–°–¢–ê
   - –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã
   - –í–æ–ø—Ä–æ—Å—ã –æ –º–µ—Ç–æ–¥–∞—Ö –ª–µ—á–µ–Ω–∏—è
   - –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏

3. –¶–ï–õ–ò –ò –û–ñ–ò–î–ê–ù–ò–Ø
   - –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ü–µ–ª–∏ —Å–µ–∞–Ω—Å–∞
   - –†–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –æ–∂–∏–¥–∞–Ω–∏—è
   - –î–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–µ –ø–ª–∞–Ω—ã

4. –ü–û–î–ì–û–¢–û–í–ö–ê –ö –°–ï–ê–ù–°–£
   - –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
   - –ò—Å—Ç–æ—Ä–∏—è –ª–µ—á–µ–Ω–∏—è –∏ –ø—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤
   - –î–Ω–µ–≤–Ω–∏–∫ —Å–∏–º–ø—Ç–æ–º–æ–≤ (–µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ)

5. –≠–§–§–ï–ö–¢–ò–í–ù–û–ï –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï –í–†–ï–ú–ï–ù–ò
   - –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ä–∞—Å—Å–∫–∞–∑–∞ –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö
   - –í–∞–∂–Ω—ã–µ –¥–µ—Ç–∞–ª–∏ –¥–ª—è —É–ø–æ–º–∏–Ω–∞–Ω–∏—è
   - –ö–∞–∫ –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã

–¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –°–¢–ò–õ–Æ:
- –ü—Ä–∞–∫—Ç–∏—á–Ω—ã–π –∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø–æ–¥—Ö–æ–¥
- –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –ø–æ–¥ –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
- –ù–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
- –ß–µ—Ç–∫–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏

–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê: –¢–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞, –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –æ–±—ä—è—Å–Ω–µ–Ω–∏–π.`;

    const preparation = await callGeminiAI(prompt, 2000);
    res.json({ success: true, preparation });
  } catch (error) {
    console.error('Error generating session preparation:', error);
    res.status(500).json({ success: false, error: error.message });
  }
});

// –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –æ —Å–µ–∞–Ω—Å–µ
router.post('/session-feedback', async (req, res) => {
  try {
    const { sessionId, feedbackText } = req.body;
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤
    const primaryTest = await pool.query(
      'SELECT answers FROM primary_test_results WHERE session_id = $1',
      [sessionId]
    );

    const additionalTests = await pool.query(
      'SELECT test_name, test_result FROM additional_test_results WHERE session_id = $1',
      [sessionId]
    );

    if (primaryTest.rows.length === 0) {
      return res.status(404).json({ success: false, error: 'Test results not found' });
    }

    const primaryAnswers = primaryTest.rows[0].answers;
    const additionalResults = additionalTests.rows;
    
    const prompt = `–ü—Ä–æ–≤–µ–¥–∏ –≥–ª—É–±–æ–∫–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–µ–∞–Ω—Å–∞ –∏ —Å–æ–∑–¥–∞–π –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏.

–ò–°–°–õ–ï–î–û–í–ê–¢–ï–õ–¨–°–ö–ê–Ø –ó–ê–î–ê–ß–ê:
–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ —Å–µ–∞–Ω—Å–µ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –µ–≥–æ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è –∏ –¥–∞–π –Ω–∞—É—á–Ω–æ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.

–î–ê–ù–ù–´–ï –î–õ–Ø –ê–ù–ê–õ–ò–ó–ê:
–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–µ—Ä–≤–∏—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞: ${JSON.stringify(primaryAnswers)}
–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤: ${JSON.stringify(additionalResults)}
–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${feedbackText}

–ò–°–°–õ–ï–î–û–í–ê–¢–ï–õ–¨–°–ö–ò–ï –ù–ê–ü–†–ê–í–õ–ï–ù–ò–Ø:
1. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å–µ–∞–Ω—Å–∞ –≤—ã—è–≤–ª–µ–Ω–Ω—ã–º –ø—Ä–æ–±–ª–µ–º–∞–º
2. –û—Ü–µ–Ω–∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–∏—Ö –ø–æ–¥—Ö–æ–¥–æ–≤
3. –í—ã—è–≤–∏ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –≤ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
4. –û–ø—Ä–µ–¥–µ–ª–∏ –æ–±–ª–∞—Å—Ç–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è
5. –ò–∑—É—á–∏ –¥–∏–Ω–∞–º–∏–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏–π

–¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –ê–ù–ê–õ–ò–ó–£:
–°–æ–∑–¥–∞–π —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑, –∫–æ—Ç–æ—Ä—ã–π –≤–∫–ª—é—á–∞–µ—Ç:

1. –ö–õ–ò–ù–ò–ß–ï–°–ö–ê–Ø –û–¶–ï–ù–ö–ê –°–ï–ê–ù–°–ê
   - –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ø—Ä–æ–±–ª–µ–º–∞–º –∏–∑ —Ç–µ—Å—Ç–æ–≤
   - –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤
   - –£—Ä–æ–≤–µ–Ω—å –ø–æ–Ω–∏–º–∞–Ω–∏—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º —Å–∏—Ç—É–∞—Ü–∏–∏

2. –ü–û–õ–û–ñ–ò–¢–ï–õ–¨–ù–´–ï –ê–°–ü–ï–ö–¢–´
   - –ß—Ç–æ –±—ã–ª–æ –æ—Å–æ–±–µ–Ω–Ω–æ –ø–æ–ª–µ–∑–Ω–æ
   - –ö–∞–∫–∏–µ –º–æ–º–µ–Ω—Ç—ã –¥–∞–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
   - –£—Å–ø–µ—à–Ω—ã–µ —Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã

3. –û–ë–õ–ê–°–¢–ò –î–õ–Ø –í–ù–ò–ú–ê–ù–ò–Ø
   - –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –≤ –ø–æ–¥—Ö–æ–¥–µ
   - –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–æ—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Ç–µ–º—ã
   - –í–æ–∑–º–æ–∂–Ω—ã–µ —É–ª—É—á—à–µ–Ω–∏—è

4. –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –î–õ–Ø –ü–†–û–î–û–õ–ñ–ï–ù–ò–Ø
   - –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è —Å–ª–µ–¥—É—é—â–∏—Ö —Å–µ–∞–Ω—Å–æ–≤
   - –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏ –≤ –ø–æ–¥—Ö–æ–¥–µ
   - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã

5. –ü–†–ê–ö–¢–ò–ß–ï–°–ö–ò–ï –°–û–í–ï–¢–´
   - –ß—Ç–æ –¥–µ–ª–∞—Ç—å –º–µ–∂–¥—É —Å–µ–∞–Ω—Å–∞–º–∏
   - –ö–∞–∫ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–µ–∞–Ω—Å—É
   - –°–∞–º–æ–ø–æ–º–æ—â—å –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ

–¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –°–¢–ò–õ–Æ:
- –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–π —Ç–æ–Ω
- –ù–∞—É—á–Ω–∞—è –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω–æ—Å—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
- –ü—Ä–∞–∫—Ç–∏—á–Ω–æ—Å—Ç—å –∏ –≤—ã–ø–æ–ª–Ω–∏–º–æ—Å—Ç—å
- –ù–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
- –ß–µ—Ç–∫–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏

–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê: –¢–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç –∞–Ω–∞–ª–∏–∑–∞, –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –æ–±—ä—è—Å–Ω–µ–Ω–∏–π.`;

    const analysis = await callGeminiAI(prompt, 2000);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –≤ –±–∞–∑—É
    await pool.query(
      'INSERT INTO session_feedback (session_id, feedback_text, ai_response) VALUES ($1, $2, $3)',
      [sessionId, feedbackText, analysis]
    );

    res.json({ success: true, analysis });
  } catch (error) {
    console.error('Error processing feedback:', error);
    res.status(500).json({ success: false, error: error.message });
  }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —Ç–µ—Å—Ç–æ–≤
async function analyzeAndRecommendTests(answers) {
  const allTests = [
    { id: 1, name: "–¢–µ—Å—Ç –Ω–∞ –ø–æ–≥—Ä–∞–Ω–∏—á–Ω–æ–µ —Ä–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –ª–∏—á–Ω–æ—Å—Ç–∏ (–ü–†–õ)", url: "https://yasno.live/tests/pogranichnoye-rasstroystvo-lichnosti" },
    { id: 2, name: "–¢–µ—Å—Ç –Ω–∞ –±–∏–ø–æ–ª—è—Ä–Ω–æ–µ –∞—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–µ —Ä–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–æ (–ë–ê–†)", url: "https://iyaroslav.ru/test/test-na-gipomaniu-bipolarnoe-rasstroystvo/" },
    { id: 3, name: "–¢–µ—Å—Ç –Ω–∞ —Å–∏–Ω–¥—Ä–æ–º –¥–µ—Ñ–∏—Ü–∏—Ç–∞ –≤–Ω–∏–º–∞–Ω–∏—è –∏ –≥–∏–ø–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (–°–î–í–ì)", url: "https://yasno.live/tests/sdvg" },
    { id: 4, name: "–¢–µ—Å—Ç –Ω–∞ –ø–æ—Å—Ç—Ç—Ä–∞–≤–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å—Ç—Ä–µ—Å—Å–æ–≤–æ–µ —Ä–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–æ (–ü–¢–°–†)", url: "https://yasno.live/tests/ptsr" },
    { id: 5, name: "–¢–µ—Å—Ç –Ω–∞ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ –ø–æ—Å—Ç—Ç—Ä–∞–≤–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å—Ç—Ä–µ—Å—Å–æ–≤–æ–µ —Ä–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–æ (–∫–ü–¢–°–†)", url: "https://www.bipolar.su/test-kptsr-onlajn-oprosnik-na-kompleksnoe-ptsr/" },
    { id: 6, name: "–¢–µ—Å—Ç –Ω–∞ –¥–µ–ø—Ä–µ—Å—Å–∏—é", url: "https://psi-praktika.ru/testyi/test-beka-na-depressiyu.html" },
    { id: 7, name: "–¢–µ—Å—Ç –Ω–∞ –≥–µ–Ω–µ—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —Ç—Ä–µ–≤–æ–∂–Ω–æ–µ —Ä–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–æ", url: "https://psytests.org/anxiety/gad7.html" },
    { id: 8, name: "–¢–µ—Å—Ç –Ω–∞ –æ–±—Å–µ—Å—Å–∏–≤–Ω–æ-–∫–æ–º–ø—É–ª—å—Å–∏–≤–Ω–æ–µ —Ä–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–æ (–û–ö–†)", url: "https://yasno.live/tests/okr-jelya-brauna" },
    { id: 9, name: "–¢–µ—Å—Ç –Ω–∞ —Ä–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –ø–∏—â–µ–≤–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è", url: "https://centrsna.by/articles/testy/test-eat-26-test-na-veroyatnost-nalichiya-rasstroystv-pishchevogo-povedeniya/" },
    { id: 10, name: "–¢–µ—Å—Ç –Ω–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç –≤–µ—â–µ—Å—Ç–≤", url: "https://rehabfamily.com/o-klinike/testy/test-na-narkoticheskuyu-zavisimost/" },
    { id: 11, name: "–¢–µ—Å—Ç –Ω–∞ –¥–∏—Å—Å–æ—Ü–∏–∞—Ç–∏–≤–Ω–æ–µ —Ä–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–æ", url: "https://yasno.live/tests/dissociativnoe-rasstrojstvo-lichnosti" },
    { id: 12, name: "–¢–µ—Å—Ç –Ω–∞ —Ä–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∞—É—Ç–∏—Å—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–ø–µ–∫—Ç—Ä–∞ (–†–ê–°)", url: "https://psytests.org/arc/aq.html" },
    { id: 13, name: "–¢–µ—Å—Ç –Ω–∞ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–µ —Ç—Ä–µ–≤–æ–∂–Ω–æ–µ —Ä–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–æ", url: "https://psytests.org/anxiety/lsas.html" },
    { id: 14, name: "–¢–µ—Å—Ç –Ω–∞ –ø–∞–Ω–∏—á–µ—Å–∫–æ–µ —Ä–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–æ", url: "https://akhmetovfoundation.org/ru/test/panycheskye-ataky-onlayn-test" },
    { id: 15, name: "–¢–µ—Å—Ç –Ω–∞ –¥–∏—Å–º–æ—Ä—Ñ–æ—Ñ–æ–±–∏—é", url: "https://testometrika.com/diagnosis-of-abnormalities/are-you-prone-to-dysmorphophobia/" },
    { id: 16, name: "–¢–µ—Å—Ç –Ω–∞ —Å—É–∏—Ü–∏–¥–∞–ª—å–Ω—ã–µ —Ç–µ–Ω–¥–µ–Ω—Ü–∏–∏", url: "https://testometrika.com/depression-and-stress/the-questionnaire-of-suicidal-risk-for-adolescents/" },
    { id: 17, name: "–¢–µ—Å—Ç –Ω–∞ –¥–µ—Ç—Å–∫—É—é —Ç—Ä–∞–≤–º—É", url: "https://ershovlabexpert.ru/test/detskie_travmy" },
    { id: 18, name: "–¢–µ—Å—Ç –Ω–∞ —à–∏–∑–æ—Ç–∏–ø–∏—á–µ—Å–∫–æ–µ —Ä–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –ª–∏—á–Ω–æ—Å—Ç–∏", url: "https://onlinetestpad.com/ru/test/1492724-test-na-shizotipicheskoe-rasstrojstvo" }
  ];

  try {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º Gemini –¥–ª—è –≥–ª—É–±–æ–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –æ—Ç–≤–µ—Ç–æ–≤
    const analysisPrompt = `–ü—Ä–æ–≤–µ–¥–∏ –≥–ª—É–±–æ–∫–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –≤ –æ—Ç–≤–µ—Ç–∞—Ö —Ç–µ—Å—Ç–∞ –∏ –æ–ø—Ä–µ–¥–µ–ª–∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ –æ–±–ª–∞—Å—Ç–∏ –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.

–ò–°–°–õ–ï–î–û–í–ê–¢–ï–õ–¨–°–ö–ê–Ø –ó–ê–î–ê–ß–ê:
–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –æ—Ç–≤–µ—Ç—ã –Ω–∞ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Ç–µ—Å—Ç –∏ –≤—ã—è–≤–∏ –∫–ª—é—á–µ–≤—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã, —Ç—Ä–µ–±—É—é—â–∏–µ —É–≥–ª—É–±–ª–µ–Ω–Ω–æ–≥–æ –∏–∑—É—á–µ–Ω–∏—è.

–î–ê–ù–ù–´–ï –î–õ–Ø –ê–ù–ê–õ–ò–ó–ê:
${JSON.stringify(answers)}

–î–û–°–¢–£–ü–ù–´–ï –¢–ï–°–¢–´ –î–õ–Ø –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:
${allTests.map((test, index) => `${index + 1}. ${test.name}`).join('\n')}

–ò–°–°–õ–ï–î–û–í–ê–¢–ï–õ–¨–°–ö–ò–ï –ù–ê–ü–†–ê–í–õ–ï–ù–ò–Ø:
1. –í—ã—è–≤–∏ –¥–æ–º–∏–Ω–∏—Ä—É—é—â–∏–µ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã
2. –û–ø—Ä–µ–¥–µ–ª–∏ –æ–±–ª–∞—Å—Ç–∏ –ø–æ–≤—ã—à–µ–Ω–Ω–æ–≥–æ —Ä–∏—Å–∫–∞
3. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –≤–∑–∞–∏–º–æ—Å–≤—è–∑–∏ –º–µ–∂–¥—É –æ—Ç–≤–µ—Ç–∞–º–∏
4. –û—Ü–µ–Ω–∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—å –≤ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏

–¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –ê–ù–ê–õ–ò–ó–£:
- –ò—Å–ø–æ–ª—å–∑—É–π –Ω–∞—É—á–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –∞–Ω–∞–ª–∏–∑—É –¥–∞–Ω–Ω—ã—Ö
- –í—ã—è–≤–∏ —Å–∫—Ä—ã—Ç—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –∏ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏
- –û–ø—Ä–µ–¥–µ–ª–∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ –æ–±–ª–∞—Å—Ç–∏ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
- –£—á—Ç–∏ —Å–ø–µ—Ü–∏—Ñ–∏–∫—É –∫–∞–∂–¥–æ–≥–æ —Ç–µ—Å—Ç–∞

–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê: –í–µ—Ä–Ω–∏ —Ç–æ–ª—å–∫–æ –Ω–æ–º–µ—Ä–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã—Ö —Ç–µ—Å—Ç–æ–≤ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1,3,6,7), –º–∞–∫—Å–∏–º—É–º 5 —Ç–µ—Å—Ç–æ–≤.`;

    const recommendedTestNumbers = await callGeminiAI(analysisPrompt, 100);
    console.log('üî¨ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Ç Gemini:', recommendedTestNumbers);
    
    // –ü–∞—Ä—Å–∏–º –Ω–æ–º–µ—Ä–∞ —Ç–µ—Å—Ç–æ–≤
    const testNumbers = recommendedTestNumbers.split(',').map(num => parseInt(num.trim()) - 1).filter(num => num >= 0 && num < allTests.length);
    
    const recommendedTests = testNumbers.map(num => allTests[num]);
    
    // –ï—Å–ª–∏ Gemini –Ω–µ –¥–∞–ª —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback –ª–æ–≥–∏–∫—É
    if (recommendedTests.length === 0) {
      console.log('‚ö†Ô∏è Gemini –Ω–µ –¥–∞–ª —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback –ª–æ–≥–∏–∫—É');
      return getFallbackRecommendations(answers, allTests);
    }
    
    return recommendedTests.slice(0, 5);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ Gemini, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback:', error.message);
    return getFallbackRecommendations(answers, allTests);
  }
}

function getFallbackRecommendations(answers, allTests) {
  const recommendedTests = [];
  
  // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Ç–µ—Å—Ç—ã
  if (answers[1]?.answer === 'yes' || answers[17]?.answer === 'yes') {
    recommendedTests.push(allTests[1]); // –ë–ê–†
  }
  
  if (answers[3]?.answer === 'yes' || answers[16]?.answer === 'yes') {
    recommendedTests.push(allTests[0]); // –ü–†–õ
  }
  
  if (answers[2]?.answer === 'yes' || answers[10]?.answer === 'yes' || answers[15]?.answer === 'yes') {
    recommendedTests.push(allTests[2]); // –°–î–í–ì
  }
  
  if (answers[5]?.answer === 'yes' || answers[33]?.answer === 'yes') {
    recommendedTests.push(allTests[3]); // –ü–¢–°–†
    recommendedTests.push(allTests[4]); // –∫–ü–¢–°–†
  }
  
  if (answers[1]?.answer === 'yes' || answers[17]?.answer === 'yes') {
    recommendedTests.push(allTests[5]); // –î–µ–ø—Ä–µ—Å—Å–∏—è
  }
  
  if (answers[4]?.answer === 'yes' || answers[11]?.answer === 'yes') {
    recommendedTests.push(allTests[6]); // –¢—Ä–µ–≤–æ–∂–Ω–æ–µ —Ä–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
    recommendedTests.push(allTests[12]); // –°–æ—Ü–∏–∞–ª—å–Ω–∞—è —Ç—Ä–µ–≤–æ–≥–∞
  }
  
  if (answers[12]?.answer === 'yes') {
    recommendedTests.push(allTests[7]); // –û–ö–†
  }
  
  if (answers[6]?.answer === 'yes') {
    recommendedTests.push(allTests[8]); // –†–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –ø–∏—â–µ–≤–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è
  }
  
  if (answers[7]?.answer === 'yes' || answers[31]?.answer === 'yes') {
    recommendedTests.push(allTests[9]); // –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç –≤–µ—â–µ—Å—Ç–≤
  }
  
  if (answers[13]?.answer === 'yes' || answers[24]?.answer === 'yes') {
    recommendedTests.push(allTests[10]); // –î–∏—Å—Å–æ—Ü–∏–∞—Ç–∏–≤–Ω–æ–µ —Ä–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
  }
  
  if (answers[15]?.answer === 'yes') {
    recommendedTests.push(allTests[15]); // –°—É–∏—Ü–∏–¥–∞–ª—å–Ω—ã–µ —Ç–µ–Ω–¥–µ–Ω—Ü–∏–∏
  }
  
  if (answers[33]?.answer === 'yes') {
    recommendedTests.push(allTests[16]); // –î–µ—Ç—Å–∫–∞—è —Ç—Ä–∞–≤–º–∞
  }

  // –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
  const uniqueTests = recommendedTests.filter((test, index, self) => 
    index === self.findIndex(t => t.id === test.id)
  );

  return uniqueTests.slice(0, 5); // –ú–∞–∫—Å–∏–º—É–º 5 —Ç–µ—Å—Ç–æ–≤
}

export default router;