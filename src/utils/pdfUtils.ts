/**
 * –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å PDF —Ñ–∞–π–ª–∞–º–∏
 * –ù–∞—Ç–∏–≤–Ω–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ PDF –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ –±—Ä–∞—É–∑–µ—Ä–∞ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
 */

/**
 * –û—Ç–∫—Ä—ã–≤–∞–µ—Ç PDF —Ñ–∞–π–ª –Ω–∞—Ç–∏–≤–Ω–æ –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ –±—Ä–∞—É–∑–µ—Ä–∞
 * @param url - URL PDF —Ñ–∞–π–ª–∞
 * @param filename - –∏–º—è —Ñ–∞–π–ª–∞
 * @param successMessage - —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
 * @param onSuccess - —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ –ø—Ä–∏ —É—Å–ø–µ—Ö–µ
 */
export const openPdf = (
  url: string, 
  filename: string, 
  successMessage: string,
  onSuccess?: (message: string) => void
): void => {
  try {
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –≤–∫–ª–∞–¥–∫—É —Å PDF
    const newWindow = window.open('', '_blank', 'noopener,noreferrer');
    
    if (newWindow) {
      // –°–æ–∑–¥–∞–µ–º HTML —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å PDF
      const htmlContent = `
        <!DOCTYPE html>
        <html lang="ru">
        <head>
          <meta charset="UTF-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <title>${filename}</title>
          <style>
            body {
              margin: 0;
              padding: 0;
              background: #f5f5f5;
              font-family: Arial, sans-serif;
            }
            .header {
              background: #4F958B;
              color: white;
              padding: 15px 20px;
              display: flex;
              justify-content: space-between;
              align-items: center;
              box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            }
            .header h1 {
              margin: 0;
              font-size: 18px;
              font-weight: 500;
            }
            .buttons {
              display: flex;
              gap: 10px;
            }
            .btn {
              padding: 8px 16px;
              border: none;
              border-radius: 4px;
              cursor: pointer;
              font-size: 14px;
              font-weight: 500;
              transition: background-color 0.2s;
            }
            .btn-download {
              background: #2E7D32;
              color: white;
            }
            .btn-download:hover {
              background: #1B5E20;
            }
            .btn-close {
              background: #f44336;
              color: white;
            }
            .btn-close:hover {
              background: #d32f2f;
            }
            .pdf-container {
              height: calc(100vh - 70px);
              width: 100%;
            }
            iframe {
              width: 100%;
              height: 100%;
              border: none;
            }
          </style>
        </head>
        <body>
          <div class="header">
            <h1>${filename}</h1>
            <div class="buttons">
              <button class="btn btn-download" onclick="downloadPdf()">üì• –°–∫–∞—á–∞—Ç—å</button>
              <button class="btn btn-close" onclick="closeWindow()">‚úï –ó–∞–∫—Ä—ã—Ç—å</button>
            </div>
          </div>
          <div class="pdf-container">
            <iframe src="${url}" type="application/pdf"></iframe>
          </div>
          <script>
            function downloadPdf() {
              const link = document.createElement('a');
              link.href = '${url}';
              link.download = '${filename}';
              link.style.display = 'none';
              document.body.appendChild(link);
              link.click();
              document.body.removeChild(link);
            }
            function closeWindow() {
              window.close();
            }
          </script>
        </body>
        </html>
      `;
      
      // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º HTML –≤ –Ω–æ–≤—É—é –≤–∫–ª–∞–¥–∫—É
      newWindow.document.write(htmlContent);
      newWindow.document.close();
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
      const message = `${successMessage} –æ—Ç–∫—Ä—ã—Ç –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ!`;
      if (onSuccess) {
        onSuccess(message);
      }
    } else {
      // Fallback: –µ—Å–ª–∏ popup –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º iframe
      const iframe = document.createElement('iframe');
      iframe.src = url;
      iframe.style.width = '100%';
      iframe.style.height = '100vh';
      iframe.style.border = 'none';
      iframe.style.position = 'fixed';
      iframe.style.top = '0';
      iframe.style.left = '0';
      iframe.style.zIndex = '9999';
      iframe.style.backgroundColor = 'white';
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –∑–∞–∫—Ä—ã—Ç–∏—è
      const closeButton = document.createElement('button');
      closeButton.innerHTML = '‚úï –ó–∞–∫—Ä—ã—Ç—å';
      closeButton.style.position = 'fixed';
      closeButton.style.top = '10px';
      closeButton.style.right = '10px';
      closeButton.style.zIndex = '10000';
      closeButton.style.padding = '10px 15px';
      closeButton.style.backgroundColor = '#ff4444';
      closeButton.style.color = 'white';
      closeButton.style.border = 'none';
      closeButton.style.borderRadius = '5px';
      closeButton.style.cursor = 'pointer';
      closeButton.style.fontSize = '14px';
      
      closeButton.onclick = () => {
        document.body.removeChild(iframe);
        document.body.removeChild(closeButton);
      };
      
      document.body.appendChild(iframe);
      document.body.appendChild(closeButton);
      
      const message = `${successMessage} –æ—Ç–∫—Ä—ã—Ç –≤ —Ç–µ–∫—É—â–µ–π –≤–∫–ª–∞–¥–∫–µ!`;
      if (onSuccess) {
        onSuccess(message);
      }
    }
  } catch (error) {
    console.error('Error opening PDF:', error);
    if (onSuccess) {
      onSuccess('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ PDF —Ñ–∞–π–ª–∞');
    }
  }
};

/**
 * –°–∫–∞—á–∏–≤–∞–µ—Ç PDF —Ñ–∞–π–ª –Ω–∞–ø—Ä—è–º—É—é –±–µ–∑ –æ—Ç–∫—Ä—ã—Ç–∏—è –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ
 * @param url - URL PDF —Ñ–∞–π–ª–∞
 * @param filename - –∏–º—è —Ñ–∞–π–ª–∞
 * @param successMessage - —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
 * @param onSuccess - —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ –ø—Ä–∏ —É—Å–ø–µ—Ö–µ
 */
export const downloadPdf = (
  url: string, 
  filename: string, 
  successMessage: string,
  onSuccess?: (message: string) => void
): void => {
  try {
    // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é —Å—Å—ã–ª–∫—É —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    const link = document.createElement('a');
    link.href = url;
    link.download = filename;
    link.style.display = 'none';
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∞—Ç—Ä–∏–±—É—Ç—ã –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    link.setAttribute('download', filename);
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –≤ DOM, –∫–ª–∏–∫–∞–µ–º –∏ —É–¥–∞–ª—è–µ–º
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    
    // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    setTimeout(() => {
      const message = `${successMessage} —Å–∫–∞—á–∞–Ω!`;
      if (onSuccess) {
        onSuccess(message);
      }
    }, 500);
    
  } catch (error) {
    console.error('Error downloading PDF:', error);
    // Fallback: –ø–æ–ø—Ä–æ–±—É–µ–º –æ—Ç–∫—Ä—ã—Ç—å –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    try {
      window.open(url, '_blank');
      const message = `${successMessage} –æ—Ç–∫—Ä—ã—Ç –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è!`;
      if (onSuccess) {
        onSuccess(message);
      }
    } catch (fallbackError) {
      console.error('Fallback also failed:', fallbackError);
      if (onSuccess) {
        onSuccess('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ PDF —Ñ–∞–π–ª–∞');
      }
    }
  }
};
