import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import { Typography, Spin } from 'antd';
import { apiRequest } from '../config/api';

const { Text } = Typography;

const DashboardTokenPage: React.FC = () => {
  const { token } = useParams<{ token: string }>();
  const navigate = useNavigate();
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    if (token) {
      fetchDashboardByToken(token);
    } else {
      setError('–ù–µ–≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞');
      setLoading(false);
    }
  }, [token]);

  const fetchDashboardByToken = async (dashboardToken: string) => {
    try {
      console.log('üîç [TOKEN PAGE] –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω:', dashboardToken);
      const response = await apiRequest(`api/tests/dashboard/${dashboardToken}`);
      const data = await response.json();

      if (data.success) {
        console.log('‚úÖ [TOKEN PAGE] –¢–æ–∫–µ–Ω –≤–∞–ª–∏–¥–µ–Ω, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ –õ–ö');
        // –°—Ä–∞–∑—É –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ –õ–ö –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫
        navigate(`/dashboard?sessionId=${data.data.session_id}`, { replace: true });
      } else {
        console.log('‚ùå [TOKEN PAGE] –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω');
        setError('–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —Å—Å—ã–ª–∫–∞ —É—Å—Ç–∞—Ä–µ–ª–∞');
        setLoading(false);
      }
    } catch (error) {
      console.error('‚ùå [TOKEN PAGE] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–æ–∫–µ–Ω–∞:', error);
      setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞');
      setLoading(false);
    }
  };


  if (loading) {
    return (
      <div style={{ 
        display: 'flex', 
        justifyContent: 'center', 
        alignItems: 'center', 
        minHeight: '100vh',
        flexDirection: 'column',
        gap: '16px',
        background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)'
      }}>
        <Spin size="large" />
        <Text style={{ color: 'white', fontSize: '16px' }}>
          –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∞—à –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç...
        </Text>
      </div>
    );
  }

  if (error) {
    return (
      <div style={{ 
        display: 'flex', 
        justifyContent: 'center', 
        alignItems: 'center', 
        minHeight: '100vh',
        flexDirection: 'column',
        gap: '16px',
        textAlign: 'center',
        padding: '20px',
        background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)'
      }}>
        <Text type="danger" style={{ fontSize: '18px', color: '#ff4d4f' }}>
          {error}
        </Text>
        <Text style={{ color: 'rgba(255, 255, 255, 0.8)' }}>
          –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Å—Å—ã–ª–∫–∏ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É
        </Text>
      </div>
    );
  }

  return null; // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç, –ø–æ—ç—Ç–æ–º—É –Ω–∏—á–µ–≥–æ –Ω–µ —Ä–µ–Ω–¥–µ—Ä–∏–º
};

export default DashboardTokenPage;
