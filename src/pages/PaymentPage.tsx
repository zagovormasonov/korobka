import React, { useState, useEffect } from 'react';
import { useSearchParams, Link } from 'react-router-dom';
import { Typography, Button, Card, Row, Col, Space, message, Checkbox, Spin } from 'antd';
import { apiRequest } from '../config/api';
import { useThemeColor } from '../hooks/useThemeColor';
import { 
  CheckCircleOutlined
} from '@ant-design/icons';

const { Title, Paragraph } = Typography;

const iconColor = 'rgb(243, 186, 111)';

const benefits = [
  {
    title: '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω, —á—Ç–æ –¥–µ–ª–∞—Ç—å –∏–º–µ–Ω–Ω–æ –≤ —Ç–≤–æ—ë–º —Å–ª—É—á–∞–µ',
    subtitle: '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ —Ç–≤–æ–µ–π —Å–∏—Ç—É–∞—Ü–∏–∏',
    icon: <img src="/plan.png" alt="Plan" style={{ width: '100px', height: '100px' }} />,
    items: [
      '–ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è',
      '–ö–∞–∫–∏–µ —Ç–µ—Å—Ç—ã –µ—â—ë –ø—Ä–æ–π—Ç–∏ –≤ —Ç–≤–æ—ë–º —Å–ª—É—á–∞–µ',
      '–ö–∞–∫–æ–π –º–µ—Ç–æ–¥ —Ç–µ—Ä–∞–ø–∏–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å',
      '–ö–∞–∫–æ–π –Ω—É–∂–µ–Ω –ø—Å–∏—Ö–æ–ª–æ–≥'
    ]
  },
  {
    title: '–ü–æ–¥–±–µ—Ä—ë–º –ø—Å–∏—Ö–æ–ª–æ–≥–∞ –ø–æ–¥ —Ç–≤–æ–π —Å–ª—É—á–∞–π',
    subtitle: '–ù–∞–π–¥—ë–º —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–Ω–∏–º–∞–µ—Ç —Ç–≤–æ–∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏',
    icon: <img src="/podbor.png" alt="Selection" style={{ width: '100px', height: '100px' }} />,
    items: []
  },
  {
    title: '–ü–æ–¥–≥–æ—Ç–æ–≤–∏–º –∫ —Å–µ–∞–Ω—Å—É',
    subtitle: '–ü–æ–º–æ–∂–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Ä–µ–º—è —Å –ø—Å–∏—Ö–æ–ª–æ–≥–æ–º',
    icon: <img src="/podgot.png" alt="Preparation" style={{ width: '100px', height: '100px' }} />,
    items: [
      '–ß—Ç–æ —Å–∫–∞–∑–∞—Ç—å —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É –≤ —Ç–≤–æ—ë–º —Å–ª—É—á–∞–µ',
      '–ö–∞–∫ –Ω–∞ –ø–µ—Ä–≤–æ–º —Å–µ–∞–Ω—Å–µ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, —á—Ç–æ –æ–Ω, —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, —Ç–µ–±–µ –ø–æ–¥—Ö–æ–¥–∏—Ç'
    ]
  },
  {
    title: '–ü–æ–¥–≥–æ—Ç–æ–≤–∏–º PDF –¥–ª—è –ø—Å–∏—Ö–æ–ª–æ–≥–∞',
    subtitle: '–î–æ–∫—É–º–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å —Ç–µ–±—è',
    icon: <img src="/file.png" alt="PDF" style={{ width: '100px', height: '100px' }} />,
    items: [
      '–î–∞—ë—à—å –µ–≥–æ –ø—Å–∏—Ö–æ–ª–æ–≥—É, –∏ –æ–Ω –ø–æ–Ω–∏–º–∞–µ—Ç, —á—Ç–æ –¥–µ–ª–∞—Ç—å –≤ —Ç–≤–æ—ë–º —Å–ª—É—á–∞–µ'
    ]
  },
  {
    title: '–¢—ã —Å–º–æ–∂–µ—à—å –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å –Ω–∞–º–∏, —á—Ç–æ –±—ã–ª–æ –Ω–∞ —Å–µ–∞–Ω—Å–µ —É –ø—Å–∏—Ö–æ–ª–æ–≥–∞, –∏ –º—ã –¥–∞–¥–∏–º –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å',
    subtitle: '–ü–æ–¥–¥–µ—Ä–∂–∏–º —Ç–µ–±—è –Ω–∞ –∫–∞–∂–¥–æ–º —ç—Ç–∞–ø–µ',
    icon: <img src="/chat.png" alt="Chat" style={{ width: '100px', height: '100px' }} />,
    items: []
  }
];

const PaymentPage: React.FC = () => {
  const [searchParams] = useSearchParams();
  const [sessionId] = useState(() => searchParams.get('sessionId') || '');
  const [mascotMessage, setMascotMessage] = useState('');
  const [loadingMascotMessage, setLoadingMascotMessage] = useState(false);
  const [paymentLoading, setPaymentLoading] = useState(false);
  const [agreementAccepted, setAgreementAccepted] = useState(false);
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–µ–ª—ã–π —Ü–≤–µ—Ç —Å—Ç–∞—Ç—É—Å-–±–∞—Ä–∞
  useThemeColor('#ffffff');

  useEffect(() => {
    if (sessionId) {
      generateMascotMessage();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–∏—à–µ–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ—Å–ª–µ –Ω–µ—É–¥–∞—á–Ω–æ–π –æ–ø–ª–∞—Ç—ã
      const urlParams = new URLSearchParams(window.location.search);
      if (urlParams.get('payment') === 'failed') {
        message.error('‚ùå –û–ø–ª–∞—Ç–∞ –Ω–µ –ø—Ä–æ—à–ª–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.');
        // –£–±–∏—Ä–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–∑ URL
        window.history.replaceState({}, document.title, window.location.pathname);
      }
    }
  }, [sessionId]);

  const generateMascotMessage = async () => {
    setLoadingMascotMessage(true);
    try {
      const response = await apiRequest('api/ai/mascot-message/payment', {
        method: 'POST',
        body: JSON.stringify({ sessionId }),
      });

      if (response.ok) {
        const data = await response.json();
        setMascotMessage(data.message);
      } else {
        console.error('Error generating mascot message');
        setMascotMessage('–û—Ç–ª–∏—á–Ω–æ! –¢—ã –ø—Ä–æ—à–µ–ª —Ç–µ—Å—Ç –∏ —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω!');
      }
    } catch (error) {
      console.error('Error generating mascot message:', error);
      setMascotMessage('–û—Ç–ª–∏—á–Ω–æ! –¢—ã –ø—Ä–æ—à–µ–ª —Ç–µ—Å—Ç –∏ —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω!');
    } finally {
      setLoadingMascotMessage(false);
    }
  };

  const handlePayment = async () => {
    if (!sessionId) {
      message.error('–û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω ID —Å–µ—Å—Å–∏–∏');
      return;
    }

    if (!agreementAccepted) {
      message.warning('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–≥–ª–∞—Å–∏—Ç—å—Å—è —Å —É—Å–ª–æ–≤–∏—è–º–∏ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è');
      return;
    }

    setPaymentLoading(true);

    try {
      console.log('üí≥ –ù–∞—á–∏–Ω–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ –¥–ª—è sessionId:', sessionId);
      
      const response = await apiRequest('api/payments/create', {
        method: 'POST',
        body: JSON.stringify({ sessionId }),
      });

      console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞...');
      console.log('üì• –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç:', response.status, response.statusText);

      const data = await response.json();
      console.log('üìä –î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞:', data);
      
      if (data.success) {
        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–ø–ª–∞—Ç—ã –¢–∏–Ω—å–∫–æ—Ñ—Ñ –≤ —Ç–æ–º –∂–µ –æ–∫–Ω–µ
        // –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã –¢–∏–Ω—å–∫–æ—Ñ—Ñ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
        window.location.href = data.paymentUrl;
      } else {
        message.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞');
      }
    } catch (error) {
      console.error('Error processing payment:', error);
      message.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–ª–∞—Ç–µ–∂–∞');
    } finally {
      setPaymentLoading(false);
    }
  };

  return (
    <div style={{ padding: '40px 20px', maxWidth: '1200px', margin: '0 auto' }}>
      <div style={{ textAlign: 'center', marginBottom: '40px' }}>
        <CheckCircleOutlined 
          style={{ 
            fontSize: '80px', 
            color: '#4F958B', 
            marginBottom: '20px',
            display: 'block'
          }} 
        />
        <Title level={1} style={{ color: 'black', marginBottom: '20px', fontFamily: 'Comfortaa, sans-serif' }}>
          –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω
        </Title>
      </div>

      <Card 
        style={{ 
          marginBottom: '40px', 
          backgroundColor: 'rgb(255, 246, 234)',
          border: 'none',
          maxWidth: '800px',
          margin: '0 auto 40px auto'
        }}
      >
        <div style={{ display: 'flex', alignItems: 'flex-start', gap: '16px' }}>
          <div style={{ position: 'relative', width: '60px', height: '60px', flexShrink: 0 }}>
            <img 
              src="/mascot.png"  
              alt="–õ—É–º–∏" 
              style={{ 
                width: '60px', 
                height: '60px', 
                objectFit: 'contain'
              }}
            />
          </div>
          <div style={{ flex: 1 }}>
            {loadingMascotMessage ? (
              <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>
                <Spin size="small" />
                <Paragraph style={{ margin: 0, fontSize: '16px', lineHeight: '1.6', color: '#333' }}>
                  –õ—É–º–∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤–∞—à–µ–≥–æ —Ç–µ—Å—Ç–∞...
                </Paragraph>
              </div>
            ) : (
              <Paragraph style={{ margin: 0, fontSize: '16px', lineHeight: '1.6', color: '#333' }}>
                {mascotMessage || '–û—Ç–ª–∏—á–Ω–æ! –¢—ã –ø—Ä–æ—à–µ–ª —Ç–µ—Å—Ç –∏ —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω!'}
              </Paragraph>
            )}
          </div>
        </div>
      </Card>

      <div style={{ textAlign: 'center', marginBottom: '40px' }}>
        <Paragraph style={{ fontSize: '18px', color: 'black', maxWidth: '600px', margin: '0 auto' }}>
          –ü–æ–ª—É—á–∏ –¥–æ—Å—Ç—É–ø –∫ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–º—É –ø–ª–∞–Ω—É:
        </Paragraph>
      </div>

      <Row gutter={[24, 24]} style={{ marginBottom: '60px' }}>
        {benefits.map((benefit, index) => (
          <Col xs={24} md={12} key={index}>
            <Card 
              style={{ 
                height: '100%',
                border: '1px solid #e0e0e0',
                borderRadius: '12px'
              }}
            >
              <div style={{ 
                marginBottom: '20px',
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center',
                width: '100px',
                height: '100px'
              }}>
                {benefit.icon}
              </div>
              <Title level={4} style={{ 
                marginBottom: '8px', 
                color: 'black',
                fontFamily: 'Comfortaa, sans-serif'
              }}>
                {benefit.title}
              </Title>
              <Paragraph style={{ color: 'black', marginBottom: '12px' }}>
                {benefit.subtitle}
              </Paragraph>
              {benefit.items.length > 0 && (
                <ul style={{ paddingLeft: '20px', marginBottom: 0 }}>
                  {benefit.items.map((item, idx) => (
                    <li key={idx} style={{ marginBottom: '8px', color: '#666' }}>
                      {item}
                    </li>
                  ))}
                </ul>
              )}
            </Card>
          </Col>
        ))}
      </Row>

      <div style={{ textAlign: 'center' }}>
        <div style={{ marginBottom: '24px', maxWidth: '600px', margin: '0 auto 24px auto', textAlign: 'left' }}>
          <div style={{ display: 'flex', alignItems: 'flex-start', gap: '8px' }}>
            <Checkbox 
              checked={agreementAccepted}
              onChange={(e) => setAgreementAccepted(e.target.checked)}
              style={{ marginTop: '2px' }}
            />
            <span style={{ 
              fontSize: '14px', 
              lineHeight: '1.5',
              textAlign: 'left',
              flex: 1
            }}>
              –Ø —Å–æ–≥–ª–∞—Å–µ–Ω(–Ω–∞) —Å —É—Å–ª–æ–≤–∏—è–º–∏{' '}
              <Link to="/offer" style={{ color: 'rgb(243, 186, 111)' }}>
                –ü—É–±–ª–∏—á–Ω–æ–π –æ—Ñ–µ—Ä—Ç—ã
              </Link>
              ,{' '}
              <Link to="/privacy-policy" style={{ color: 'rgb(243, 186, 111)' }}>
                –ü–æ–ª–∏—Ç–∏–∫–∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
              </Link>
              {' '}–∏ –¥–∞—é{' '}
              <Link to="/consent" style={{ color: 'rgb(243, 186, 111)' }}>
                –°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
              </Link>
            </span>
          </div>
        </div>
        
        <Button 
          type="primary" 
          size="large"
          onClick={handlePayment}
          loading={paymentLoading}
          style={{ 
            width: '100%',
            maxWidth: '600px',
            height: '56px',
            fontSize: '18px',
            fontWeight: '600',
            backgroundColor: 'rgb(243, 186, 111)',
            borderColor: 'rgb(243, 186, 111)',
            border: 'none',
            borderRadius: '28px',
            boxShadow: 'none'
          }}
        >
          –û–ø–ª–∞—Ç–∏—Ç—å 10‚ÇΩ
        </Button>
      </div>
    </div>
  );
};

export default PaymentPage;